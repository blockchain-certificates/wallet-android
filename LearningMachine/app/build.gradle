apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    dexOptions {
        javaMaxHeapSize "4g"
    }
    defaultConfig {
        applicationId "com.learningmachine.android.app"
        minSdkVersion 19
        targetSdkVersion 26
        versionName "3.1.1"
        def buildNumber = System.getenv("BUILD_NUMBER")
        if (buildNumber != null) {
            versionCode buildNumber.toInteger()
            versionNameSuffix "-" + buildNumber
        } else {
            versionCode 35
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        LearningMachineRelease {
            keyAlias System.getenv("SIGNING_KEY_ALIAS")
            keyPassword System.getenv("SIGNING_KEY_PASSWORD")
            storeFile file('../../keys/learning-machine.jks')
            storePassword System.getenv("SIGNING_STORE_PASSWORD")
        }
    }

    packagingOptions {
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude "org/bitcoinj/crypto/mnemonic/wordlist/english.txt"
        exclude "org/bitcoinj/crypto/cacerts"
        exclude "org.bitcoin.production.checkpoints.txt"
        exclude "org.bitcoin.test.checkpoints.txt"
    }

    if (project.hasProperty("devBuild")) {
        // disable PNG crunching
        aaptOptions.cruncherEnabled = false

        // we're not doing splits,  but in case we ever did:
        splits.abi.enable = false
        splits.density.enable = false
    }

    flavorDimensions "env"

    productFlavors {
        dev {
            applicationId "com.learningmachine.android.app.dev"
            dimension "env"
            if (project.hasProperty("devBuild")) {
                // don't package all resources for dev builds
                resConfigs("en", "xxhdpi")

                // avoid legacy multidex
                minSdkVersion 21
            }
        }
        staging {
            applicationId "com.learningmachine.android.app.staging"
            dimension "env"
        }
        production {
            dimension "env"
        }
    }

    buildTypes {
        release {
//            if (System.getenv("BUILD_NUMBER") == null) {
//                versionNameSuffix "-nontravis"
//            }

            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${variant.name}-${versionName}.apk"
                }
            }

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.LearningMachineRelease
        }
        debug {
            if (System.getenv("BUILD_NUMBER") == null) {
                versionNameSuffix "-debug"
            }
            buildConfigField "boolean", "DEBUG_BUILD", "true"
            debuggable true
        }
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
    }
}

final SUPPORT_VERSION = '27.1.1'
final MULTIDEX_VERSION = '1.0.1'
final DAGGER_VERSION = '2.22.1'
final SLF4J_VERSION = '1.7.25'
final SPONGYCASTLE_VERSION = '1.56.0.0'
final PROTOBUF_VERSION = '3.3.1'
final TIMBER_VERSION = '4.5.1'
final JODATIMEANDROID_VERSION = '2.9.9'
final RETROFIT_VERSION = '2.5.0'
final LOGGINGINTERCEPTOR_VERSION = '3.4.1'
final GSON_VERSION = '2.8.1'
final RXJAVA_VERSION = '1.3.0'
final RXANDROID_VERSION = '1.2.1'
final RXLIFECYCLE_VERSION = '1.0'
final RXLINT_VERSION = '1.2'
final PICASSO_VERSION = '2.5.2'
final OKIO_VERSION = '2.2.2'

// android test
final ESPRESSO_VERSION = '3.0.1'

// test
final JUNIT_VERSION = '4.12'
final MOCKITO_VERSION = '2.2.11'
final ROBOLECTRIC_VERSION = '3.8'
final JODATIME_VERSION = '2.8.1'

// These must be forced until everyone gets on the same page
// ?: 18.0, Robolectric: 20.0
final GUAVA_VERSION = '25.1-android'
// RxLifecycle: 3.0.1, Robolectric: 2.0.1
final FINDBUGS_VERSION = '3.0.1'

configurations.all {
    resolutionStrategy {
        force "com.google.guava:guava:$GUAVA_VERSION"
        force "com.google.code.findbugs:jsr305:$FINDBUGS_VERSION"
    }
}

repositories {
    maven {
        url 'https://maven.google.com'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$SUPPORT_VERSION"
    implementation "com.android.support:recyclerview-v7:$SUPPORT_VERSION"
    implementation "com.android.support:cardview-v7:$SUPPORT_VERSION"
    implementation "com.android.support:design:$SUPPORT_VERSION"
    implementation "com.android.support:multidex:$MULTIDEX_VERSION"
    implementation "org.slf4j:slf4j-log4j12:$SLF4J_VERSION"
    implementation "com.madgag.spongycastle:core:$SPONGYCASTLE_VERSION"
    implementation "com.google.protobuf:protobuf-java:$PROTOBUF_VERSION"
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    implementation "com.jakewharton.timber:timber:$TIMBER_VERSION"
    implementation "net.danlew:android.joda:$JODATIMEANDROID_VERSION"
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
    implementation "com.squareup.okhttp3:logging-interceptor:$LOGGINGINTERCEPTOR_VERSION"
    implementation "com.squareup.okio:okio:$OKIO_VERSION"
    implementation "com.google.code.gson:gson:$GSON_VERSION"
    implementation "io.reactivex:rxjava:$RXJAVA_VERSION"
    implementation "io.reactivex:rxandroid:$RXANDROID_VERSION"
    implementation "com.trello:rxlifecycle:$RXLIFECYCLE_VERSION"
    implementation "com.trello:rxlifecycle-android:$RXLIFECYCLE_VERSION"
    implementation "nl.littlerobots.rxlint:rxlint:$RXLINT_VERSION"
    implementation "com.squareup.picasso:picasso:$PICASSO_VERSION"
    implementation "com.google.guava:guava:$GUAVA_VERSION"

    implementation 'com.google.android.exoplayer:exoplayer:2.8.4'


    androidTestImplementation("com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$ESPRESSO_VERSION"
//    androidTestImplementation "com.android.support.test:testing-support-lib:0.1"
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:2.0") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    androidTestImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"

    testImplementation "junit:junit:$JUNIT_VERSION"
    testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
    testImplementation "org.robolectric:robolectric:$ROBOLECTRIC_VERSION"
    testImplementation "org.robolectric:shadows-multidex:$ROBOLECTRIC_VERSION"
    testImplementation "joda-time:joda-time:$JODATIME_VERSION"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
}
